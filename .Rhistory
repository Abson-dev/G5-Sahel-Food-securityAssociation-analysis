shading = input$cAxis_matrix, engine = "htmlwidget",
control = list(max = input$topRules_matrix)))
})
output$groupedPlot <- shiny::renderPlot({
shiny::req(input$cAxis_grouped, input$k)
handleErrors()
plot(rules(), method = "grouped", shading = input$cAxis_grouped,
engine = "ggplot2", control = list(k = input$k)) +
ggplot2::theme(text = element_text(size = 14))
})
output$graphPlot <- visNetwork::renderVisNetwork({
shiny::req(input$cAxis_graph, input$topRules_graph)
handleErrors()
suppressWarnings(plt <- plot(rules(), method = "graph",
shading = input$cAxis_graph, engine = "htmlwidget",
control = list(max = input$topRules_graph)))
plt
})
output$rules.csv <- shiny::downloadHandler(filename = "rules.csv",
content = function(file) {
utils::write.csv(as(rules(), "data.frame"),
file)
})
})
}
##########
G5SahelruleExplorer(rules)
shiny::runApp()
shiny::runApp()
runApp()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(arules)
library(arulesViz)
library(haven)
G5_Sahel_2018_2023_Mali_enhanced <- read_dta("C:/Users/AHema/OneDrive - CGIAR/Desktop/2024/WFP/G5 - Sahel countries/Integrated & enhanced dataset Mali/Integrated & enhanced dataset Mali/G5_Sahel_2018_2023_Mali_enhanced.dta")
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
labelled::to_factor()
#View(G5_Sahel_2018_2023_Mali_enhanced)
#Create ID by using admin2PcodN, wave and generate values between 1 to number rows (123,382)
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
mutate(ID = paste0(admin2PcodN,"_",wave,"_",1:nrow(G5_Sahel_2018_2023_Mali_enhanced)))
tmp_data = G5_Sahel_2018_2023_Mali_enhanced
#converted into a set of transactions where each row (ID) represents a transaction
tmp_data <- tmp_data %>% tibble::column_to_rownames(var="ID")
tmp_data = tmp_data %>%
dplyr::select(-c(gtsummary::starts_with("admin")))
tmp_data = tmp_data %>%
dplyr::select(-c("hhid","year","wave","weight"))
tmp_data = tmp_data %>% janitor::remove_constant() %>%
janitor::remove_empty()
tmp_data_df = tmp_data
#trans <- transactions(Zoo)
# Error in discretizeDF(from) : Problem with column heavy_freq_nov
# Error in discretize(x = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  :
#   Less than 2 uniques breaks left. Maybe the variable has only one value!
working_data = tmp_data_df %>% dplyr::select(-c("heavy_freq_nov","heavy_spell_nov","dry_freq_dec","dry_spell_dec","heavy_freq_dec","heavy_spell_dec","dry_freq_jan","dry_spell_jan","heavy_freq_jan","heavy_spell_jan","heavy_freq_feb","heavy_spell_feb","heavy_freq_mar","heavy_spell_mar","heavy_freq_apr","heavy_spell_apr","cold_freq_oct","cold_spell_oct","hot_freq_nov","hot_spell_nov","hot_freq_dec","hot_spell_dec","hot_freq_jan","hot_spell_jan","cold_freq_may","cold_spell_may","cold_freq_jun","cold_spell_jun","cold_freq_jul","cold_spell_jul","cold_freq_aug","cold_spell_aug","cold_freq_sep","cold_spell_sep"))
# converted into a set of transactions where each row represents a transaction and each column is translated into items
trans <- transactions(working_data)
head(trans)
#ggplot(Zoo, aes(legs)) + geom_bar()
#Zoo$legs |> table()
# Zoo_has_legs <- Zoo |> mutate(legs = legs > 0)
# ggplot(Zoo_has_legs, aes(legs)) + geom_bar()
# Zoo_has_legs$legs |> table()
# Zoo_unique_leg_values <- Zoo |> mutate(legs = factor(legs))
# Zoo_unique_leg_values$legs |> head()
# Zoo_discretized_legs <- Zoo |> mutate(
#   legs = discretize(legs, breaks = 2, method="interval")
# )
# table(Zoo_discretized_legs$legs)
# trans <- transactions(Zoo_has_legs)
# trans
summary(trans)
ggplot(
tibble(
Support = sort(itemFrequency(trans, type = "absolute"), decreasing = TRUE),
Item = seq_len(ncol(trans))
), aes(x = Item, y = Support)) + geom_line()
2^ncol(trans)
its <- apriori(trans, parameter=list(target = "frequent"))
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
library(arules)
library(arulesViz)
library(haven)
G5_Sahel_2018_2023_Mali_enhanced <- read_dta("C:/Users/AHema/OneDrive - CGIAR/Desktop/2024/WFP/G5 - Sahel countries/Integrated & enhanced dataset Mali/Integrated & enhanced dataset Mali/G5_Sahel_2018_2023_Mali_enhanced.dta")
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
labelled::to_factor()
#View(G5_Sahel_2018_2023_Mali_enhanced)
#Create ID by using admin2PcodN, wave and generate values between 1 to number rows (123,382)
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
mutate(ID = paste0(admin2PcodN,"_",wave,"_",1:nrow(G5_Sahel_2018_2023_Mali_enhanced)))
tmp_data = G5_Sahel_2018_2023_Mali_enhanced
#converted into a set of transactions where each row (ID) represents a transaction
tmp_data <- tmp_data %>% tibble::column_to_rownames(var="ID")
tmp_data = tmp_data %>%
dplyr::select(-c(gtsummary::starts_with("admin")))
tmp_data = tmp_data %>%
dplyr::select(-c("hhid","year","wave","weight"))
tmp_data = tmp_data %>% janitor::remove_constant() %>%
janitor::remove_empty()
tmp_data_df = tmp_data
#trans <- transactions(Zoo)
# Error in discretizeDF(from) : Problem with column heavy_freq_nov
# Error in discretize(x = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  :
#   Less than 2 uniques breaks left. Maybe the variable has only one value!
working_data = tmp_data_df %>% dplyr::select(-c("heavy_freq_nov","heavy_spell_nov","dry_freq_dec","dry_spell_dec","heavy_freq_dec","heavy_spell_dec","dry_freq_jan","dry_spell_jan","heavy_freq_jan","heavy_spell_jan","heavy_freq_feb","heavy_spell_feb","heavy_freq_mar","heavy_spell_mar","heavy_freq_apr","heavy_spell_apr","cold_freq_oct","cold_spell_oct","hot_freq_nov","hot_spell_nov","hot_freq_dec","hot_spell_dec","hot_freq_jan","hot_spell_jan","cold_freq_may","cold_spell_may","cold_freq_jun","cold_spell_jun","cold_freq_jul","cold_spell_jul","cold_freq_aug","cold_spell_aug","cold_freq_sep","cold_spell_sep"))
# converted into a set of transactions where each row represents a transaction and each column is translated into items
trans <- transactions(working_data)
head(trans)
#ggplot(Zoo, aes(legs)) + geom_bar()
#Zoo$legs |> table()
# Zoo_has_legs <- Zoo |> mutate(legs = legs > 0)
# ggplot(Zoo_has_legs, aes(legs)) + geom_bar()
# Zoo_has_legs$legs |> table()
# Zoo_unique_leg_values <- Zoo |> mutate(legs = factor(legs))
# Zoo_unique_leg_values$legs |> head()
# Zoo_discretized_legs <- Zoo |> mutate(
#   legs = discretize(legs, breaks = 2, method="interval")
# )
# table(Zoo_discretized_legs$legs)
# trans <- transactions(Zoo_has_legs)
# trans
#summary(trans)
#colnames(trans)
#colnames(Zoo)
#as(trans, "matrix")[1:3,]
#inspect(trans[1:3])
#image(trans)
itemFrequencyPlot(trans,topN = 20)
minsup = 0.5
minconf = 0.9
rules <- apriori(trans, parameter = list(support = minsup, confidence = minconf))
shiny::runApp()
length(rules)
rules |> head() |> inspect()
rules |> head() |> quality()
rules <- sort(rules, by = "lift")
rules |> head(n = 10) |> inspect()
plot(rules)
## To reduce overplotting, jitter is added! Use jitter = 0 to prevent jitter.
plot(rules, control = list(jitter = 0))
minsup = 0.05
minconf = 0.9
rules <- apriori(trans, parameter = list(support = minsup, confidence = minconf))
minsup = 0.05
minconf = 0.9
rules <- apriori(trans, parameter = list(support = minsup, confidence = minconf))
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse) # for data manipulation
library(arules) # for association analysis
library(arulesViz) # for rules vizualisation
library(haven)
G5_Sahel_2018_2023_Mali_enhanced <- read_dta("C:/Users/AHema/OneDrive - CGIAR/Desktop/2024/WFP/G5 - Sahel countries/Integrated & enhanced dataset Mali/Integrated & enhanced dataset Mali/G5_Sahel_2018_2023_Mali_enhanced.dta")
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
labelled::to_factor()
#View(G5_Sahel_2018_2023_Mali_enhanced)
#Create ID by using admin2PcodN, wave and generate values between 1 to number rows (123,382)
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
mutate(ID = paste0(admin2PcodN,"_",wave,"_",1:nrow(G5_Sahel_2018_2023_Mali_enhanced)))
tmp_data = G5_Sahel_2018_2023_Mali_enhanced
#converted into a set of transactions where each row (ID) represents a transaction
tmp_data <- tmp_data %>% tibble::column_to_rownames(var="ID")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse) # for data manipulation
library(arules) # for association analysis
library(arulesViz) # for rules vizualisation
library(haven)
G5_Sahel_2018_2023_Mali_enhanced <- read_dta("C:/Users/AHema/OneDrive - CGIAR/Desktop/2024/WFP/G5 - Sahel countries/Integrated & enhanced dataset Mali/Integrated & enhanced dataset Mali/G5_Sahel_2018_2023_Mali_enhanced.dta")
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
labelled::to_factor()
#View(G5_Sahel_2018_2023_Mali_enhanced)
#Create ID by using admin2PcodN, wave and generate values between 1 to number rows (123,382)
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
mutate(ID = paste0(admin2PcodN,"_",wave,"_",1:nrow(G5_Sahel_2018_2023_Mali_enhanced)))
tmp_data = G5_Sahel_2018_2023_Mali_enhanced
#converted into a set of transactions where each row (ID) represents a transaction
tmp_data <- tmp_data %>% tibble::column_to_rownames(var="ID")
tmp_data %>%
dplyr::select(c(gtsummary::starts_with("admin"))) %>% names()
#"admin0Pcod"  "admin0name"  "admin1Pcod"  "admin1name"  "admin2PcodN" "admin2name"
# tmp_data = tmp_data %>%
#   dplyr::select(-c(gtsummary::starts_with("admin")))
tmp_data = tmp_data %>%
dplyr::select(-c("admin0Pcod","admin0name","admin1Pcod","admin2PcodN"))
#"hhid","year","wave","weight"
tmp_data = tmp_data %>%
dplyr::select(-c("hhid","weight"))
tmp_data = tmp_data %>% janitor::remove_constant() %>%
janitor::remove_empty()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse) # for data manipulation
library(arules) # for association analysis
library(arulesViz) # for rules vizualisation
library(haven)
G5_Sahel_2018_2023_Mali_enhanced <- read_dta("C:/Users/AHema/OneDrive - CGIAR/Desktop/2024/WFP/G5 - Sahel countries/Integrated & enhanced dataset Mali/Integrated & enhanced dataset Mali/G5_Sahel_2018_2023_Mali_enhanced.dta")
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
labelled::to_factor()
#View(G5_Sahel_2018_2023_Mali_enhanced)
#Create ID by using admin2PcodN, wave and generate values between 1 to number rows (123,382)
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
mutate(ID = paste0(admin2PcodN,"_",wave,"_",1:nrow(G5_Sahel_2018_2023_Mali_enhanced)))
tmp_data = G5_Sahel_2018_2023_Mali_enhanced
#converted into a set of transactions where each row (ID) represents a transaction
tmp_data <- tmp_data %>% tibble::column_to_rownames(var="ID")
#"admin0Pcod"  "admin0name"  "admin1Pcod"  "admin1name"  "admin2PcodN" "admin2name"
# tmp_data = tmp_data %>%
#   dplyr::select(-c(gtsummary::starts_with("admin")))
tmp_data = tmp_data %>%
dplyr::select(-c("admin0Pcod","admin0name","admin1Pcod","admin2PcodN"))
#"hhid","year","wave","weight"
tmp_data = tmp_data %>%
dplyr::select(-c("hhid","weight"))
#184 variables
tmp_data = tmp_data %>% janitor::remove_constant()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse) # for data manipulation
library(arules) # for association analysis
library(arulesViz) # for rules vizualisation
library(haven)
G5_Sahel_2018_2023_Mali_enhanced <- read_dta("C:/Users/AHema/OneDrive - CGIAR/Desktop/2024/WFP/G5 - Sahel countries/Integrated & enhanced dataset Mali/Integrated & enhanced dataset Mali/G5_Sahel_2018_2023_Mali_enhanced.dta")
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
labelled::to_factor()
#View(G5_Sahel_2018_2023_Mali_enhanced)
#Create ID by using admin2PcodN, wave and generate values between 1 to number rows (123,382)
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
mutate(ID = paste0(admin2PcodN,"_",wave,"_",1:nrow(G5_Sahel_2018_2023_Mali_enhanced)))
tmp_data = G5_Sahel_2018_2023_Mali_enhanced
#converted into a set of transactions where each row (ID) represents a transaction
tmp_data <- tmp_data %>% tibble::column_to_rownames(var="ID")
#"admin0Pcod"  "admin0name"  "admin1Pcod"  "admin1name"  "admin2PcodN" "admin2name"
# tmp_data = tmp_data %>%
#   dplyr::select(-c(gtsummary::starts_with("admin")))
tmp_data = tmp_data %>%
dplyr::select(-c("admin0Pcod","admin0name","admin1Pcod","admin2PcodN"))
#"hhid","year","wave","weight"
tmp_data = tmp_data %>%
dplyr::select(-c("hhid","weight"))
#184 variables
tmp_data2 = tmp_data %>% janitor::remove_constant()
#178 variables
setdiff(names(tmp_data2),names(tmp_data))
difference(names(tmp_data2),names(tmp_data))
setdiff(names(tmp_data2),names(tmp_data))
names(tmp_data2)
names(tmp_data)
setdiff(names(tmp_data),names(tmp_data2))
tmp_data = tmp_data %>% janitor::remove_constant()
#178 variables
# "zs_potato_inte","zs_orange_inte","zs_potato_freq","zs_orange_freq","zs_potato_spell","zs_orange_spell"
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse) # for data manipulation
library(arules) # for association analysis
library(arulesViz) # for rules vizualisation
library(haven)
G5_Sahel_2018_2023_Mali_enhanced <- read_dta("C:/Users/AHema/OneDrive - CGIAR/Desktop/2024/WFP/G5 - Sahel countries/Integrated & enhanced dataset Mali/Integrated & enhanced dataset Mali/G5_Sahel_2018_2023_Mali_enhanced.dta")
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
labelled::to_factor()
#View(G5_Sahel_2018_2023_Mali_enhanced)
#Create ID by using admin2PcodN, wave and generate values between 1 to number rows (123,382)
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
mutate(ID = paste0(admin2PcodN,"_",wave,"_",1:nrow(G5_Sahel_2018_2023_Mali_enhanced)))
tmp_data = G5_Sahel_2018_2023_Mali_enhanced
#converted into a set of transactions where each row (ID) represents a transaction
tmp_data <- tmp_data %>% tibble::column_to_rownames(var="ID")
#"admin0Pcod"  "admin0name"  "admin1Pcod"  "admin1name"  "admin2PcodN" "admin2name"
# tmp_data = tmp_data %>%
#   dplyr::select(-c(gtsummary::starts_with("admin")))
tmp_data = tmp_data %>%
dplyr::select(-c("admin0Pcod","admin0name","admin1Pcod","admin2PcodN"))
#"hhid","year","wave","weight"
tmp_data = tmp_data %>%
dplyr::select(-c("hhid","weight"))
#184 variables
tmp_data = tmp_data %>% janitor::remove_constant()
#178 variables
# "zs_potato_inte","zs_orange_inte","zs_potato_freq","zs_orange_freq","zs_potato_spell","zs_orange_spell"
tmp_data_df = tmp_data
table(tmp_data_df$heavy_freq_nov)
table(tmp_data_df$heavy_spell_nov)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse) # for data manipulation
library(arules) # for association analysis
library(arulesViz) # for rules vizualisation
library(haven)
G5_Sahel_2018_2023_Mali_enhanced <- read_dta("C:/Users/AHema/OneDrive - CGIAR/Desktop/2024/WFP/G5 - Sahel countries/Integrated & enhanced dataset Mali/Integrated & enhanced dataset Mali/G5_Sahel_2018_2023_Mali_enhanced.dta")
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
labelled::to_factor()
#View(G5_Sahel_2018_2023_Mali_enhanced)
#Create ID by using admin2PcodN, wave and generate values between 1 to number rows (123,382)
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
mutate(ID = paste0(admin2PcodN,"_",wave,"_",1:nrow(G5_Sahel_2018_2023_Mali_enhanced)))
tmp_data = G5_Sahel_2018_2023_Mali_enhanced
#converted into a set of transactions where each row (ID) represents a transaction
tmp_data <- tmp_data %>% tibble::column_to_rownames(var="ID")
#"admin0Pcod"  "admin0name"  "admin1Pcod"  "admin1name"  "admin2PcodN" "admin2name"
# tmp_data = tmp_data %>%
#   dplyr::select(-c(gtsummary::starts_with("admin")))
tmp_data = tmp_data %>%
dplyr::select(-c("admin0Pcod","admin0name","admin1Pcod","admin2PcodN"))
#"hhid","year","wave","weight"
tmp_data = tmp_data %>%
dplyr::select(-c("hhid","weight"))
#184 variables
tmp_data = tmp_data %>% janitor::remove_constant()
#178 variables
# "zs_potato_inte","zs_orange_inte","zs_potato_freq","zs_orange_freq","zs_potato_spell","zs_orange_spell"
tmp_data_df = tmp_data
#Less than 2 uniques breaks left. Maybe the variable has only one value!
working_data = tmp_data_df %>% dplyr::select(-c("heavy_freq_nov","heavy_spell_nov","dry_freq_dec","dry_spell_dec","heavy_freq_dec","heavy_spell_dec","dry_freq_jan","dry_spell_jan","heavy_freq_jan","heavy_spell_jan","heavy_freq_feb","heavy_spell_feb","heavy_freq_mar","heavy_spell_mar","heavy_freq_apr","heavy_spell_apr","cold_freq_oct","cold_spell_oct","hot_freq_nov","hot_spell_nov","hot_freq_dec","hot_spell_dec","hot_freq_jan","hot_spell_jan","cold_freq_may","cold_spell_may","cold_freq_jun","cold_spell_jun","cold_freq_jul","cold_spell_jul","cold_freq_aug","cold_spell_aug","cold_freq_sep","cold_spell_sep"))
# converted into a set of transactions where each row represents a transaction and each column is translated into items
trans <- transactions(working_data)
head(trans)
trans
colnames(trans)
#colnames(trans)
itemFrequencyPlot(trans,topN = 20)
itemFrequencyPlot(trans,topN = 10)
ggplot(
tibble(
Support = sort(itemFrequency(trans, type = "absolute"), decreasing = TRUE),
Item = seq_len(ncol(trans))
), aes(x = Item, y = Support)) + geom_line()
2^ncol(trans)
minsup = 0.05
minconf = 0.9
rules <- apriori(trans, parameter = list(target = "frequent",support = minsup, confidence = minconf))
shiny::runApp()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse) # for data manipulation
library(arules) # for association analysis
library(arulesViz) # for rules vizualisation
library(haven)
G5_Sahel_2018_2023_Mali_enhanced <- read_dta("C:/Users/AHema/OneDrive - CGIAR/Desktop/2024/WFP/G5 - Sahel countries/Integrated & enhanced dataset Mali/Integrated & enhanced dataset Mali/G5_Sahel_2018_2023_Mali_enhanced.dta")
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
labelled::to_factor()
#View(G5_Sahel_2018_2023_Mali_enhanced)
#Create ID by using admin2PcodN, wave and generate values between 1 to number rows (123,382)
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
mutate(ID = paste0(admin2PcodN,"_",wave,"_",1:nrow(G5_Sahel_2018_2023_Mali_enhanced)))
tmp_data = G5_Sahel_2018_2023_Mali_enhanced
#converted into a set of transactions where each row (ID) represents a transaction
tmp_data <- tmp_data %>% tibble::column_to_rownames(var="ID")
#"admin0Pcod"  "admin0name"  "admin1Pcod"  "admin1name"  "admin2PcodN" "admin2name"
# tmp_data = tmp_data %>%
#   dplyr::select(-c(gtsummary::starts_with("admin")))
tmp_data = tmp_data %>%
dplyr::select(-c("admin0Pcod","admin0name","admin1Pcod","admin2PcodN"))
#"hhid","year","wave","weight"
tmp_data = tmp_data %>%
dplyr::select(-c("hhid","weight"))
#184 variables
tmp_data = tmp_data %>% janitor::remove_constant()
#178 variables
# "zs_potato_inte","zs_orange_inte","zs_potato_freq","zs_orange_freq","zs_potato_spell","zs_orange_spell"
tmp_data_df = tmp_data
#Less than 2 uniques breaks left. Maybe the variable has only one value!
working_data = tmp_data_df %>% dplyr::select(-c("heavy_freq_nov","heavy_spell_nov","dry_freq_dec","dry_spell_dec","heavy_freq_dec","heavy_spell_dec","dry_freq_jan","dry_spell_jan","heavy_freq_jan","heavy_spell_jan","heavy_freq_feb","heavy_spell_feb","heavy_freq_mar","heavy_spell_mar","heavy_freq_apr","heavy_spell_apr","cold_freq_oct","cold_spell_oct","hot_freq_nov","hot_spell_nov","hot_freq_dec","hot_spell_dec","hot_freq_jan","hot_spell_jan","cold_freq_may","cold_spell_may","cold_freq_jun","cold_spell_jun","cold_freq_jul","cold_spell_jul","cold_freq_aug","cold_spell_aug","cold_freq_sep","cold_spell_sep"))
#144 variables
# converted into a set of transactions where each row represents a transaction and each column is translated into items
trans <- transactions(working_data)
#view the format
trans
# from 144 variables to 427 items (columns)
# discrete features/variables need be directly translated into items and continuous features need to be discretized
#colnames(trans)
itemFrequencyPlot(trans,topN = 10)
dev.off()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse) # for data manipulation
library(arules) # for association analysis
library(arulesViz) # for rules vizualisation
library(haven)
G5_Sahel_2018_2023_Mali_enhanced <- read_dta("C:/Users/AHema/OneDrive - CGIAR/Desktop/2024/WFP/G5 - Sahel countries/Integrated & enhanced dataset Mali/Integrated & enhanced dataset Mali/G5_Sahel_2018_2023_Mali_enhanced.dta")
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
labelled::to_factor()
#View(G5_Sahel_2018_2023_Mali_enhanced)
#Create ID by using admin2PcodN, wave and generate values between 1 to number rows (123,382)
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
mutate(ID = paste0(admin2PcodN,"_",wave,"_",1:nrow(G5_Sahel_2018_2023_Mali_enhanced)))
tmp_data = G5_Sahel_2018_2023_Mali_enhanced
#converted into a set of transactions where each row (ID) represents a transaction
tmp_data <- tmp_data %>% tibble::column_to_rownames(var="ID")
#"admin0Pcod"  "admin0name"  "admin1Pcod"  "admin1name"  "admin2PcodN" "admin2name"
# tmp_data = tmp_data %>%
#   dplyr::select(-c(gtsummary::starts_with("admin")))
tmp_data = tmp_data %>%
dplyr::select(-c("admin0Pcod","admin0name","admin1Pcod","admin2PcodN"))
#"hhid","year","wave","weight"
tmp_data = tmp_data %>%
dplyr::select(-c("hhid","weight"))
#184 variables
tmp_data = tmp_data %>% janitor::remove_constant()
#178 variables
# "zs_potato_inte","zs_orange_inte","zs_potato_freq","zs_orange_freq","zs_potato_spell","zs_orange_spell"
tmp_data_df = tmp_data
#Less than 2 uniques breaks left. Maybe the variable has only one value!
working_data = tmp_data_df %>% dplyr::select(-c("heavy_freq_nov","heavy_spell_nov","dry_freq_dec","dry_spell_dec","heavy_freq_dec","heavy_spell_dec","dry_freq_jan","dry_spell_jan","heavy_freq_jan","heavy_spell_jan","heavy_freq_feb","heavy_spell_feb","heavy_freq_mar","heavy_spell_mar","heavy_freq_apr","heavy_spell_apr","cold_freq_oct","cold_spell_oct","hot_freq_nov","hot_spell_nov","hot_freq_dec","hot_spell_dec","hot_freq_jan","hot_spell_jan","cold_freq_may","cold_spell_may","cold_freq_jun","cold_spell_jun","cold_freq_jul","cold_spell_jul","cold_freq_aug","cold_spell_aug","cold_freq_sep","cold_spell_sep"))
#144 variables
# converted into a set of transactions where each row represents a transaction and each column is translated into items
trans <- transactions(working_data)
#view the format
trans
itemFrequencyPlot(trans,topN = 10)
ggplot(
tibble(
Support = sort(itemFrequency(trans, type = "absolute"), decreasing = TRUE),
Item = seq_len(ncol(trans))
), aes(x = Item, y = Support)) + geom_line()
minsup = 0.05
minconf = 0.9
rules <- apriori(trans, parameter = list(target = "frequent",support = minsup, confidence = minconf))
length(rules)
rules |> head() |> inspect()
write(rules, file = "rules.csv", quote = TRUE)
inspectDT(rules,options = list(scrollX = TRUE))
shiny::runApp()
ruleExplorer(rules)
minsup = 0.05
minconf = 0.9
rules <- apriori(trans, parameter = list(support = minsup, confidence = minconf))
shiny::runApp()
runApp()
runApp()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse) # for data manipulation
library(arules) # for association analysis
library(arulesViz) # for rules vizualisation
library(haven)
G5_Sahel_2018_2023_Mali_enhanced <- read_dta("C:/Users/AHema/OneDrive - CGIAR/Desktop/2024/WFP/G5 - Sahel countries/Integrated & enhanced dataset Mali/Integrated & enhanced dataset Mali/G5_Sahel_2018_2023_Mali_enhanced.dta")
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
labelled::to_factor()
#View(G5_Sahel_2018_2023_Mali_enhanced)
#Create ID by using admin2PcodN, wave and generate values between 1 to number rows (123,382)
G5_Sahel_2018_2023_Mali_enhanced = G5_Sahel_2018_2023_Mali_enhanced %>%
mutate(ID = paste0(admin2PcodN,"_",wave,"_",1:nrow(G5_Sahel_2018_2023_Mali_enhanced)))
tmp_data = G5_Sahel_2018_2023_Mali_enhanced
#converted into a set of transactions where each row (ID) represents a transaction
tmp_data <- tmp_data %>% tibble::column_to_rownames(var="ID")
#"admin0Pcod"  "admin0name"  "admin1Pcod"  "admin1name"  "admin2PcodN" "admin2name"
# tmp_data = tmp_data %>%
#   dplyr::select(-c(gtsummary::starts_with("admin")))
tmp_data = tmp_data %>%
dplyr::select(-c("admin0Pcod","admin0name","admin1Pcod","admin2PcodN"))
#"hhid","year","wave","weight"
tmp_data = tmp_data %>%
dplyr::select(-c("hhid","weight"))
#184 variables
table(tmp_data$zs_potato_inte)
tmp_data = tmp_data %>% janitor::remove_constant()
#178 variables
# "zs_potato_inte","zs_orange_inte","zs_potato_freq","zs_orange_freq","zs_potato_spell","zs_orange_spell"
tmp_data_df = tmp_data
table(tmp_data_df$heavy_freq_nov)
table(tmp_data_df$heavy_spell_feb)
#Less than 2 uniques breaks left. Maybe the variable has only one value!
working_data = tmp_data_df %>% dplyr::select(-c("heavy_freq_nov","heavy_spell_nov","dry_freq_dec","dry_spell_dec","heavy_freq_dec","heavy_spell_dec","dry_freq_jan","dry_spell_jan","heavy_freq_jan","heavy_spell_jan","heavy_freq_feb","heavy_spell_feb","heavy_freq_mar","heavy_spell_mar","heavy_freq_apr","heavy_spell_apr","cold_freq_oct","cold_spell_oct","hot_freq_nov","hot_spell_nov","hot_freq_dec","hot_spell_dec","hot_freq_jan","hot_spell_jan","cold_freq_may","cold_spell_may","cold_freq_jun","cold_spell_jun","cold_freq_jul","cold_spell_jul","cold_freq_aug","cold_spell_aug","cold_freq_sep","cold_spell_sep"))
#144 variables
# converted into a set of transactions where each row represents a transaction and each column is translated into items
trans <- transactions(working_data)
#view the format
trans
colnames(trans)
itemFrequencyPlot(trans,topN = 10)
runApp()
shiny::runApp()
runApp()
